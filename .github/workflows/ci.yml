name: CI

on: [push]

jobs:
  build:
    name: ${{ matrix.name }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
#          - {
#            name: "Windows Latest MSVC",
#            os: windows-latest,
#            build_type: "Release", cc: "cl", cxx: "cl",
#            environment_script: "C:/Program Files (x86)/Microsoft Visual Studio/2019/Enterprise/VC/Auxiliary/Build/vcvars64.bat"
#          }
#          - {
#            name: "Windows Latest MinGW",
#            os: windows-latest,
#            build_type: "Release", cc: "gcc", cxx: "g++"
#          }
        - {
          name: "Ubuntu Latest",
          os: ubuntu-latest,
          build_type: "Release", cc: "gcc", cxx: "g++"
        }
        - {
          name: "Ubuntu 18.04",
          os: ubuntu-18.04,
          build_type: "Release", cc: "gcc", cxx: "g++"
        }
        - {
          name: "Ubuntu 16.04",
          os: ubuntu-16.04,
          build_type: "Release", cc: "gcc", cxx: "g++"
        }
#          - {
#            name: "macOS Latest Clang",
#            os: macos-latest,
#            build_type: "Release", cc: "clang", cxx: "clang++"
#          }
    steps:
      - uses: actions/checkout@v2
      - name: Install and Build Google Test Framework
        run: |
          sudo apt-get install libgtest-dev
          cd /usr/src/googletest/googletest
          sudo mkdir gtest-build
          cd gtest-build
          sudo cmake ..
          sudo make
          sudo cp libgtest* /usr/lib/
          cd ..
          sudo mkdir /usr/local/lib/googletest
          sudo ln -s /usr/lib/libgtest.a /usr/local/lib/googletest/libgtest.a
          sudo ln -s /usr/lib/libgtest_main.a /usr/local/lib/googletest/libgtest_main.a
      - name: Build Library
        run: |
          sudo mkdir lib-build
          cd lib-build
          sudo cmake ..
          sudo make
          sudo ./tests/unittests-all
